자바스크립트 복습

> 기존 js 문법 복습/개념정리
> 자바스크립트 + 타입스크립트
> 응용 및 변칙성 자바스크립트 문법
> 리액트


========================================================================================
랜덤배경
<script>
  //랜덤 숫자 생성하는 함수
  //number라는 매개변수 넣어야 작동
  function random(number) {
    return Math.floor(Math.random() * number);
  }

  //background에 랜덤컬러 rndCol를 적용시켜주는 bgChange함수 생성
  function bgChange() {
    const rndCol = 'rgb(' + random(255) + ',' + random(255) + ',' + random(255) + ')';
    document.body.style.backgroundColor = rndCol;
  }

  bgChange();
</script>
========================================================================================
******** 자바스크립트에서 자주 사용하는 내장 함수 best 3 ********

alert();
> 알림창을 표시할 때 사용하는 함수

confirm();
> 확인 버튼과 취소버튼을 활용해서 사용자로부터 어떠한 동작을 유도할 때 사용하는 함수
	true, false값 반환

prompt();
========================================================================================
***********************변수***********************
null = 비어있는 '값', 형태가 있음
undefined = 형태 자체가 없음

변수 : 변할 수 있는 값, 재할당 가능
> 자바스크립트 변수 - 프로그램에서 사용하기위해 어떤 값을 담아 놓는 바구니
변수 정의 키워드 : let / var(사용x)

*** 변수 작명 유의사항 ***
1. 변수 이름은 숫자로 시작할 수 없다
2. 변수 이름 안에는 공백이 들어올 수 없다
3. 변수 이름은 영문자 및 특수문자(_, $)사용
4. 기존 자바스크립트 안에 미리 정해놓은 예약어는 사용 불가
ex) console, document 등
5. 무의미한 변수명은 사용하지 않는다


상수 : 고정되어 있는 값, 재할당 불가능
상수 정의 키워드 : const


호이스팅 : 어딘가로부터 끌어올리다

var : 호이스팅 가능
let, const : 호이스팅 불가능

========================================================================================
***********************자료형***********************

자바스크립트 자료형
> 숫자형 / 문자열 / 논리형(불리언)

typeof로 형태 확인 가능

역슬래시 따옴표 안에 특수기호 사용할때 사용
역슬래시n 문장 단락 분리
역슬래시t


document.write(`${name}님 ${classRoom}호 강의실로 입장하세요`)
> 템플릿 리터럴 : 문자열과 변수와 함수 등의 식을 하나의 문자열로 만드는 표현 방법 및 형식

========================================================================================

***********************객체***********************
객체 : 여러개의 자료유형을 하나로 묶어놓은 형태

객체 형태

객체명 = {
   key : value,
   key : value,
   key : value,
   key : value
}
key : value => 한쌍 = property


let bookInfo = 100;
>bookInfo = 변수

let bookInfo = {
  title : "원데이발란스",
  page : 272,
  pubDate : "2023-04-11"
}
>bookInfo = 객체




bookInfo.title;
= "원데이발란스"

bookInfo["title"];
= "원데이발란스"

값을 가져오는 방식 두가지




배열객체 : 객체유형 중 하나
배열객체는 인덱스 값을 가진다
아이템 개수를 셀 때 사용하는 속성기능 => 객체명.length

let colors = ["red", "blue", "pink"]


========================================================================================

symbol() : 객체의 자료 중 유일한 혹은 유니크한 키 값을 부여하고 싶을 때 사용하는 함수
하나의 프로젝트를 여러 개발자가 진행하는 경우
객체에 들어가는 값을 Symbol을 사용하여 중첩되지 않게 각각 지정할 수 있다
**따로 다시 복습
========================================================================================

변환


문자를 숫자로 >>> number(), parseInt(), parseFloat()

다른 타입의 자료형을 문자열로 변환할 때 사용하는 함수는 >> String()

간단하게 숫자나 문자열로 변환하는 방법
변수명 = +변수명   >> 숫자형
변수명 = 변수명+ ""  >> 문자열

다른 유형의 데이터를 논리형 데이터로 변환할 때 사용하는 함수는 >> Boolean()

========================================================================================
연산자

1.산술연산자( +,  -,  *,  /,   %)

1-1 증감연산자
>
증가 연산자 : i++ / ++i
감소 연산자 : i-- / --i

1-2 연결연산자


2.대입연산자 = 할당연산자
y = y + x
y += x


3.비교연산자( >, <, >=, <=, ==, !=)

3==3 / 3!=2
값이 같을 경우

3===3 / 3!=="3"
값과 속성이 같을 경우

4.논리연산자
true / false

A && B : 양쪽의 피연산자 값이 모두 true인 경우에만 true
A || B : 양쪽의 피연산자 값중 어느 하나만이라도 true라고 한다면, 결과값은 true

========================================================================================
제어문

* if문
* else문
* else if문

* for문
* for of문
* for in문

* while문
* do while문
* switch문

* continue문
* break문



조건문에서 중괄호 언제 생략?

if(userInfo !== null) alert(userInfo);

1) false 값을 설정하지 않은 경우
2) 줄코딩을 할 수 있을 만큼 간단한 조건식의 경우



if (num1 < num2) {
  small = num1;
} else {
  small = num2;
}
이러한 불편함을 해소하기 위해

삼항조건연산자 사용

조건 ? true일때 실행할 명령문 : false일때 실행할 명령문




-----------------------------------------------------------
const num1 = parseInt(prompt("첫 번째 정수 : "));
const num2 = parseInt(prompt("두 번째 정수 : "));
let str;

if(num1 % 2 === 0 && num2 % 2 === 0) {
  str = "두 수 모두 짝수입니다"
} else {
  str = "짝수가 아닌 수가 있습니다"
};

alert(str);
-----------------------------------------------------------


forEach() : 배열 객체에서 각각의 요소들을 꺼내서 반복시키고자 할때

forEach(콜백함수)
> 콜백함수 : 다른 함수의 인자값으로 사용되는 함수를 의미
> 인자값 = 인수 : 매개변수의 값으로 적용될 값
> 매개변수 : function("매개변수") => 함수가 작동하기 위해서 존재해야하는 값

--------------------------------------------------------------------------------------------
for in문 : 일반객체에서 객체값안에 있는 프로퍼티( key : value )를 가져와서 반복시킬 때
for(변수 in 객체명)

const bookInfo = {
  title : "자바스크립트",
  pubDate : "2023-04-12",
  pages : 272,
  finished : true
}

for(key in bookInfo) {
  document.write(`${key} :${bookInfo[key]}<br />`);
}
---->key 변수 자리에 i 많이 사용
--------------------------------------------------------------------------------------------












