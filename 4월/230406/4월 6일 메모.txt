jQuery
학원 수업에서는 압축파일(compressed)을 사용해도 상관없지만
나중에는 uncompressed 파일을 사용해야한다

최신버전과 사용하고싶은 구버전을 둘다 연동
최신버전을 맨위로, 구버전을 그다음에
자바스크립트 파일은 순서에 영향을 미친다

제이쿼리 파일을 다운로드하면 인터넷 연결이 끊겨도 사용 가능하지만
로컬스토리지 용량을 잡아먹는다

cdn 연결만 하면 용량을 아낄 수 있지만
인터넷 연결이 끊기면 사용 불가능
안정적인것은 다운로드하는것

cdnjs

*제이쿼리 구문을 사용하는 2ㄱ ㅏ지 방법
2번째를 많이 사용! 그 중에서도 객체타입 자주 사용

1 ))))
$(document).ready(function () {
  $("#txt").css("color", "red");
});

2 )))) 인자값 / 가볍고 심플할때 사용
$(function () {
  $("#txt").css("color", "red");
});
----
$(function () {
  $("#txt")
    .css("color", "red")
    .css("border", "1px solid #fff")
    .css("backgroundColor", "red");
});
----
2-1 )))) 객체타입 / 복잡할때 사용 , 대부분 객체타입을 사용한다
$(function () {
  $("#txt").css({
    color: "red",
  });
});
----
$(function () {
  $("#txt").css({
    color: "red",
    backgroundColor: "blue",
    border: "1px solid #fff",
  });
});
----
======================================================
jQuery 문법

id선택자, class 선택자, 요소 선택자, 그룹 선택자, 종속 선택자, 인접관계 선택자

id 선택자 : 
$(function () {
  $("#tit").css("background-color", "#ff0").css("border", "2px solid #f00");
});

//#tit 배경색 = #ff0, 테두리 = 2px solid #ff

그룹 선택자 : 
$(function () {
  $("#tit3, h1")
    .css("background-color", "#0ff")
    .css("border", "2px dashed #f00");
});

//#tit3, h1요소 두개를 가져올 수 있음

종속 선택자 : 
$(function () {
  $("h1.tit").css("background-color", "#0ff").css("border", "2px dashed #f00");
});

//.tit두개 중 h1에만 스타일 주고 싶을때

인접관계 선택자 : 
$(function () {
  $("h2").next().css("color", "green");                     //동생, 즉 다음에 오는 요소인 p태그 내용1에 스타일
  $("h2").parent().css("border", "2px solid #f00");         //부모, h2태그의 부모 - inner_wrap에 스타일
});

부모요소 선택자 : 
$(function () {
  $("#list_1").parent().css("border", "1px dashed #f00");
});

-----------------------------------------
<body>
    <div id="wrap">
      <h1>인접 관계 선택자</h1>
      <p>내용1</p>
      <p class="txt">내용2</p>
      <p>내용3</p>
      <p>내용4</p>
    </div>
  </body>


$(function () {
  let style_1 = {
    "background-color": "#0ff",
    border: "2px solid #f00",
  };
  let style_2 = {
    "background-color": "#ff0",
    border: "2px dashed #f00",
  };

  $(".txt").prev().css(style_1); //.txt의 형인 p태그 내용1에 스타일

  $(".txt + p").css(style_2); //.txt 바로 다음 p태그인 내용3에 스타일

  $(".txt").next().next().css(style_2); //.txt의 동생 동생인 p태그 내용4에 스타일
});
-------------------------------------------
<body>
    <div id="wrap">
      <h1>인접 관계 선택자</h1>
      <p>내용1</p>
      <p class="txt">내용2</p>
      <p>내용3</p>
      <p>내용4</p>
    </div>
  </body>

$(function () {
  let style_1 = {
    "background-color": "#0ff",
    border: "2px solid #f00",
  };
  let style_2 = {
    "background-color": "#ff0",
    border: "2px dashed #f00",
  };

  $(".txt").prevAll().css(style_1); //.txt 이전에 있는 모든 요소에 효과
  $(".txt").nextAll().css(style_2); //.txt 다음에 있는 모든 요소에 효과
  $(".txt").siblings().css(style_1); //.txt 모든 형제들에 스타일
});
------------------------------------------------
<body>
    <div id="wrap">
      <h1 class="title">선택자</h1>
      <p>내용1</p>
      <p>내용2</p>
      <p class="txt3">내용3</p>
      <p>내용4</p>
      <p>내용5</p>
      <p class="txt6">내용6</p>
    </div>
  </body>

$(function () {
  let style_1 = {
    "background-color": "#0ff",
    border: "2px solid #f00",
  };

  $(".txt3").prevUntil(".title").css(style_1); //.txt3부터 .title 전까지

  $(".txt3").nextUntil(".txt6").css(style_1); //.txt3부터 .txt6 전까지
});
---------------------------------------------------
상위요소 선택자

$(function () {
  $(".txt1").parents().css({
    border: "2px dashed #00f",
  });
  $(".txt2").parents("div").css({
    //부모요소들 중 div만
    border: "2px solid #f00",
  });
});

//parent는 바로 위의 부모요소
//parents는 위에있는 모든 부모요소, 부모의 같은 형제 요소들도 취급을 하지만 형제 요소들의 자식들은 해당 x
----------------------------------------------------------

$(function () {
  $("#menu li").eq(2).css({
    "background-color": "#ff0", //2번째 인덱스랑 같은것
  });

  $("#menu li:lt(2)").css({
    "background-color": "#0ff", //2번째 인덱스보다 앞에
  });

  $("#menu li:gt(2)").css({
    "background-color": "#f0f", //2번째 인덱스보다 뒤에
  });
});
----------------------------------------------------------
$(function () {
  $("li:first-of-type").css({         //li태그의 첫번째 요소들한테 스타일
    "background-color": "#ff0",
  });
  $("li:last-of-type").css({          //li태그의 마지막 요소들한테 스타일
    "background-color": "#0ff",
  });
});

-----------------------------------------------------------
$(function () {
  $("#menu1 li:nth-child(1)").css({             //첫번째 요소
    "background-color": "#ff0", 
  });
  $("#menu1 li:nth-child(2n)").css({            //짝수 요소
    border: "2px dashed #f00",
  });
  $("#menu2 li:nth-last-child(2)").css({        //뒤에서 두번째요소
    "background-color": "#0ff",
  });
});

----------------------------------------------------------
$(function () {
  $("#menu1 li").slice(1, 3).css({        //li에서 1부터 3미만까지
    "background-color": "#ff0",
  });
  $("li:only-child").css({                //li중에서 오직 하나 있는 요소
    "background-color": "#0ff",
  });
});

----------------------------------------------------------
----------------------------------------------------------
속성탐색선택자

정규식 표현

$("input[type^=radio]")
^ : 캐럿 = 캐럿뒤에 나오는 키워드로 시작하는 요소를 선택할 때

$("input[type$=radio]")
$ :달러 = 달러뒤에 나오는 키워드로 끝나는 요소를 선택할 때

$("input[type*=radio]")
* : 표시가 된 키워드 요소를 선택할 때


<body>
    <div id="wrap">
      <p>
        <a href="http://easyspub.co.kr" target="_blank">EasysPub</a>
        <a href="https://naver.com">Naver</a>
        <a href="http://google.co.kr">Google</a>
        <a href="http://daum.net">Daum</a>
      </p>
    </div>
    <form action="#" method="get" id="member_f">
      <p>
        <label for="user_id">아이디</label>
        <input type="text" name="user_id" id="user_id" />
      </p>
      <p>
        <label for="user_pw">비밀번호</label>
        <input type="password" name="user_pw" id="user_pw" />
      </p>
    </form>
  </body>



$(function () {
  $("#wrap a[target]").css({        //target을 가지고 있는 곳에 스타일
    color: "#f00",
  });
  $("#wrap a[href^=https]").css({   //href중 https로 시작하는 곳에 스타일
    color: "#0f0",
  });

  $("#wrap a[href$=net]").css({     //href중 net으로 끝나는 곳에 스타일
    color: "#fff",
    "background-color": "#000",
  });

  $("#wrap a[href*=google]").css({  //href중 google을 가지고 있는 곳에 스타일
    color: "#000",
  });

  $("#member_f :text").css({        //member_f의 text에 스타일
    "background-color": "#ff0",
  });

  $("#member_f :password").css({    //member_f의 password에 스타일
    "background-color": "#0ff",
  });
});

-----------------------------------------------------------------------

<body>
    <div id="wrap">
      <p>내용1</p>
      <p style="display: none">내용2</p>
      <p>내용3</p>
    </div>
    <form action="#">
      <p id="zone1">
        <select name="course" id="course">
          <option value="opt1">옵션1</option>
          <option value="opt2">옵션2</option>
          <option value="opt3">옵션3</option>
        </select>
      </p>
      <p id="zone2">
        <input type="checkbox" name="hobby1" value="독서" />독서
        <input type="checkbox" name="hobby2" value="자전거" />자전거
        <input type="checkbox" name="hobby3" value="등산" checked />등산
      </p>
      <p id="zone3">
        <input type="radio" name="gender" value="male" />남성
        <input type="radio" name="gender" value="female" checked />여성
      </p>
    </form>
  </body>

$(function () {
  $("#wrap p:hidden").css({
    display: "block",
    "background-color": "#ff0",
  });

  let z1 = $("#zone1 :selected").val();
  console.log(z1);

  let z2 = $("#zone2 :checked").val();
  console.log(z2);

  let z3 = $("#zone3 :checked").val();
  console.log(z3);
});


====================================================================
each메서드 꼭 공부하기(**중요**)

<body>
    <h1>탐색선택자</h1>
    <ul id="menu1">
      <li>내용1-1</li>
      <li>내용1-2</li>
      <li>내용1-3</li>
    </ul>
    <ul id="menu2">
      <li>내용2-1</li>
      <li>내용2-2</li>
      <li>내용2-3</li>
    </ul>
  </body>

$(function () {
  let obj = [{ area: "서울" }, { area: "부산" }, { area: "전주" }];

  //each 배열에 저장된 숫자를 순서대로 하나씩 가져오는것
  $(obj).each(function (i, o) {
    console.log(i + ":", o);
  });
  console.log("==== The End1 ====");

  $.each($("#menu2 li"), function (i, o) {
    console.log(i + ":", o);
  });
  console.log("==== The End2 ====");

  $.each($("#menu2 li"), function (i) {
    console.log(i + ":", $(this));
  });
});
================================================================
map (**중요**)

$(function () {
  let arr1 = [
    {
      area: "서울",
      name: "윤동성",
    },
    {
      area: "서울",
      name: "홍길동",
    },
    {
      area: "하남",
      name: "황병선",
    },
    {
      area: "용산",
      name: "민혜린",
    },
  ];

  let arr2 = $.map(arr1, function (a, b) {
    if (a.area == "서울") {
      return a;
    }
  });
  console.log(arr2);
  console.log("==== First End ====");

  //배열값이 true여야한다
  let arr3 = $.grep(arr1, function (a, b) {
    if (a.area == "서울") {
      return true;
    } else {
      return false;
    }
  });
  console.log(arr3);
  console.log("==== Second End ====");
});

====================================================
$(function () {
  let arr1 = ["서울", "대전", "부산", "전주"]; //배열객체
  let arr2 = ["한국", "미국", "일본", "전주"];
  let obj = {
    name: "정부장",
    area: "서울",
  }; // 단순객체

  let idxNum = $.inArray("부산", arr1); //arr1에서 부산이 몇번째에 있는지 알려줘
  console.log(idxNum);

  let okArray1 = $.isArray(arr1); // 배열객체 = true
  console.log(okArray1);

  let okArray2 = $.isArray(obj); // 단순객체 = false
  console.log(okArray2);

  $.merge(arr2, arr1); //arr2에 arr1을 합쳐줘
  console.log(arr2);
});
====================================================

$(function () {
  let idxNum = $("li").index($("#list3")); //li안에 #list3이 index에서 몇번째에 있는지 알려줘
  console.log(idxNum);
});
====================================================
jQuery user Interface

download - all jquery ui downloads
다운 후 jquery-ui.js / jquery-ui.css / jquery-ui.theme.css폴더
index에 넣기
그리고 script태그와 body태그 안에 있는것만 사용

bxslider & slickslider